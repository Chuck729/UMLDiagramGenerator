digraph uml { rankdir=BT;0 [ shape = "record" , label = "{ edu.rosehulman.csse374.revengd.ClassContent | - dependencies: java.util.List\<java.lang.String\> \l - associations: java.util.List\<java.lang.String\> \l - inheritance: java.util.List\<java.lang.String\> \l - implementation: java.util.List\<java.lang.String\> \l - method: java.util.List\<java.lang.String\> \l - field: java.util.List\<java.lang.String\> \l - classNode: org.objectweb.asm.tree.ClassNode \l - isInterface: boolean \l - isAbstract: boolean \l - removedInterfaces: java.util.List\<java.lang.String\> \l - classReader: org.objectweb.asm.ClassReader \l | - populateFields() : void \l - createFieldList(java.util.List\<org.objectweb.asm.tree.FieldNode\>) : void \l - parseField(org.objectweb.asm.tree.FieldNode) : java.lang.String \l - createMethodList(java.util.List\<org.objectweb.asm.tree.MethodNode\>) : void \l - parseMethod(org.objectweb.asm.tree.MethodNode) : java.lang.String \l - parseArgs(org.objectweb.asm.tree.MethodNode) : java.util.List\<java.lang.String\> \l + getInheritance() : java.util.List\<java.lang.String\> \l + getImplementation() : java.util.List\<java.lang.String\> \l + getMethod() : java.util.List\<java.lang.String\> \l + getField() : java.util.List\<java.lang.String\> \l + getClassNode() : org.objectweb.asm.tree.ClassNode \l + setMethod(java.util.List\<java.lang.String\>) : void \l + setField(java.util.List\<java.lang.String\>) : void \l + getName() : java.lang.String \l + isInterface() : boolean \l + isAbstract() : boolean \l + getParent() : java.lang.String \l + getInterfaces() : java.util.List\<java.lang.String\> \l + getAssociation() : java.util.List\<java.lang.String\> \l + setAssociation(java.util.List\<java.lang.String\>) : void \l + getDependency() : java.util.List\<java.lang.String\> \l + setDependency(java.util.List\<java.lang.String\>) : void \l - cutPath(java.lang.String) : java.lang.String \l + removeInterface(java.lang.String) : void \l + removeParent() : void \l }", ]; 0->11[arrowhead="onormal", style="solid"]; 0->10[arrowhead="onormal", style="dashed"]; 1 [ shape = "record" , label = "{ \<\<Abstract\>\>\l edu.rosehulman.csse374.revengd.ConvertInternalTypes | | - convertType(java.lang.String) : java.lang.String \l - getFriendlyName(java.lang.String) : java.lang.String \l + convert(java.util.List\<java.lang.String\>) : java.util.List\<java.lang.String\> \l }", ]; 1->11[arrowhead="onormal", style="solid"]; 2 [ shape = "record" , label = "{ edu.rosehulman.csse374.revengd.DesignParser | - classes: java.util.List\<edu.rosehulman.csse374.revengd.IClassContent\> \l - codeGenerator: edu.rosehulman.csse374.revengd.ICodeGenerator \l - outFile: java.lang.String \l - reader: org.objectweb.asm.ClassReader \l - classNames: java.util.List\<java.lang.String\> \l - isRecursive: boolean \l - methodConvert: edu.rosehulman.csse374.revengd.MethodConvert \l - fieldConvert: edu.rosehulman.csse374.revengd.FieldConvert \l - modifications: java.util.List\<edu.rosehulman.csse374.revengd.IModification\> \l - dpFinder: edu.rosehulman.csse374.revengd.ICoupleFinder \l - assFinder: edu.rosehulman.csse374.revengd.ICoupleFinder \l | + parseProject() : void \l + generate() : void \l + findPattern() : void \l }", ]; 2->11[arrowhead="onormal", style="solid"]; 2->12[arrowhead="onormal", style="dashed"]; 3 [ shape = "record" , label = "{ edu.rosehulman.csse374.revengd.FieldConvert | | + convert(java.util.List\<java.lang.String\>) : java.util.List\<java.lang.String\> \l - parseFields(java.util.List\<java.lang.String\>) : java.util.List\<java.lang.String\> \l - transformField(java.lang.String) : java.lang.String \l }", ]; 3->1[arrowhead="onormal", style="solid"]; 4 [ shape = "record" , label = "{ edu.rosehulman.csse374.revengd.GraphVizGenerator | - code: java.util.List\<java.util.List\<java.lang.String\>\> \l - classes: java.util.List\<edu.rosehulman.csse374.revengd.GraphVizComponents\> \l - options: java.util.Map\<java.lang.String,java.lang.String\> \l - names: java.util.Map\<java.lang.String,java.lang.String\> \l | + generateCode(java.util.List\<edu.rosehulman.csse374.revengd.IClassContent\>) : void \l + write(java.lang.String) : void \l - concatCode() : java.lang.String \l - format(edu.rosehulman.csse374.revengd.GraphVizComponents) : void \l - escape(java.lang.String) : java.lang.String \l + getClasses() : java.util.List\<edu.rosehulman.csse374.revengd.GraphVizComponents\> \l + addOption(java.lang.String, java.lang.String) : void \l }", ]; 4->11[arrowhead="onormal", style="solid"]; 4->13[arrowhead="onormal", style="dashed"]; 5 [ shape = "record" , label = "{ edu.rosehulman.csse374.revengd.MethodConvert | | + convert(java.util.List\<java.lang.String\>) : java.util.List\<java.lang.String\> \l - parseMethods(java.util.List\<java.lang.String\>) : java.util.List\<java.lang.String\> \l - transformMethod(java.lang.String) : java.lang.String \l }", ]; 5->1[arrowhead="onormal", style="solid"]; 6 [ shape = "record" , label = "{ edu.rosehulman.csse374.revengd.PrivateOnly | | + modify(java.util.List\<java.lang.String\>) : java.util.List\<java.lang.String\> \l }", ]; 6->11[arrowhead="onormal", style="solid"]; 6->14[arrowhead="onormal", style="dashed"]; 7 [ shape = "record" , label = "{ edu.rosehulman.csse374.revengd.ProtectedOnly | | + modify(java.util.List\<java.lang.String\>) : java.util.List\<java.lang.String\> \l }", ]; 7->11[arrowhead="onormal", style="solid"]; 7->14[arrowhead="onormal", style="dashed"]; 8 [ shape = "record" , label = "{ edu.rosehulman.csse374.revengd.PublicOnly | | + modify(java.util.List\<java.lang.String\>) : java.util.List\<java.lang.String\> \l }", ]; 8->11[arrowhead="onormal", style="solid"]; 8->14[arrowhead="onormal", style="dashed"]; 9 [ shape = "record" , label = "{ edu.rosehulman.csse374.revengd.UMLGeneratorApp | | + main(java.lang.String[]) : void \l }", ]; 9->11[arrowhead="onormal", style="solid"]; 10 [ shape = "record" , label = "{ \<\<Interface\>\>\l edu.rosehulman.csse374.revengd.IClassContent | | + getAssociation() : java.util.List\<java.lang.String\> \l + setAssociation(java.util.List\<java.lang.String\>) : void \l + getInheritance() : java.util.List\<java.lang.String\> \l + getImplementation() : java.util.List\<java.lang.String\> \l + getDependency() : java.util.List\<java.lang.String\> \l + setDependency(java.util.List\<java.lang.String\>) : void \l + getMethod() : java.util.List\<java.lang.String\> \l + getField() : java.util.List\<java.lang.String\> \l + getName() : java.lang.String \l + getClassNode() : org.objectweb.asm.tree.ClassNode \l + isInterface() : boolean \l + isAbstract() : boolean \l + getParent() : java.lang.String \l + getInterfaces() : java.util.List\<java.lang.String\> \l + setMethod(java.util.List\<java.lang.String\>) : void \l + setField(java.util.List\<java.lang.String\>) : void \l + removeInterface(java.lang.String) : void \l + removeParent() : void \l }", ]; 10->11[arrowhead="onormal", style="solid"]; 11 [ shape = "record" , label = "{ java.lang.Object | | - registerNatives() : void \l + getClass() : java.lang.Class\<\> \l + hashCode() : int \l + equals(java.lang.Object) : boolean \l - clone() : java.lang.Object \l + toString() : java.lang.String \l + notify() : void \l + notifyAll() : void \l + wait(long) : void \l + wait(long, int) : void \l + wait() : void \l - finalize() : void \l - \<clinit\>() : void \l }", ]; 12 [ shape = "record" , label = "{ \<\<Interface\>\>\l edu.rosehulman.csse374.revengd.IDesignParser | | + parseProject() : void \l + generate() : void \l + findPattern() : void \l }", ]; 12->11[arrowhead="onormal", style="solid"]; 13 [ shape = "record" , label = "{ \<\<Interface\>\>\l edu.rosehulman.csse374.revengd.IGraphVizGenorator | | + getClasses() : java.util.List\<edu.rosehulman.csse374.revengd.GraphVizComponents\> \l + addOption(java.lang.String, java.lang.String) : void \l }", ]; 13->11[arrowhead="onormal", style="solid"]; 13->15[arrowhead="onormal", style="dashed"]; 14 [ shape = "record" , label = "{ \<\<Interface\>\>\l edu.rosehulman.csse374.revengd.IModification | | + modify(java.util.List\<java.lang.String\>) : java.util.List\<java.lang.String\> \l }", ]; 14->11[arrowhead="onormal", style="solid"]; 15 [ shape = "record" , label = "{ \<\<Interface\>\>\l edu.rosehulman.csse374.revengd.ICodeGenerator | | + generateCode(java.util.List\<edu.rosehulman.csse374.revengd.IClassContent\>) : void \l + write(java.lang.String) : void \l }", ]; 15->11[arrowhead="onormal", style="solid"];  }