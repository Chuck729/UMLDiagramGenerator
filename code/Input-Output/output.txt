digraph uml { rankdir=BT; amazonParser [ shape = "record", label = "{ amazonParser | - mp: Lproblem/microsoftParser \l - te: Lproblem/TooEager \l | String) : String \l }", ]; amazonParser -> Object [arrowhead="onormal", style="solid"]; amazonParser -> ILineParser [arrowhead="onormal", style="dashed"]; DataStandardizer [ shape = "record", label = "{ DataStandardizer | - company: Ljava/lang/String \l - data: Ljava/lang/String \l - frame: Ljavax/swing/JFrame \l - topPanel: Ljavax/swing/JPanel \l - txtField: Ljavax/swing/JTextField \l - button: Ljavax/swing/JButton \l - scrollPane: Ljavax/swing/JScrollPane \l - textArea: Ljavax/swing/JTextArea \l - label: Ljavax/swing/JLabel \l - parser: Lproblem/ILineParser \l - mp: Lproblem/microsoftParser \l - map: Ljava/util/Map \l | - createAndShowGUI() : void \l + execute() : void \l String) : void \l + getCompany() : String \l + getData() : String \l String) : void \l String[]) : void \l }", ]; DataStandardizer -> Object [arrowhead="onormal", style="solid"]; googleParser [ shape = "record", label = "{ googleParser | | String) : String \l }", ]; googleParser -> Object [arrowhead="onormal", style="solid"]; googleParser -> ILineParser [arrowhead="onormal", style="dashed"]; grouponParser [ shape = "record", label = "{ grouponParser | | String) : String \l }", ]; grouponParser -> Object [arrowhead="onormal", style="solid"]; grouponParser -> ILineParser [arrowhead="onormal", style="dashed"]; microsoftParser [ shape = "record", label = "{ microsoftParser | - ds: Lproblem/DataStandardizer \l | String) : String \l }", ]; microsoftParser -> Object [arrowhead="onormal", style="solid"]; microsoftParser -> ILineParser [arrowhead="onormal", style="dashed"]; TooEager [ shape = "record", label = "{ TooEager | - uniqueInstance: Lproblem/TooEager \l - magicNumber: int \l | - \<clinit\>() : void \l + getInstance() : TooEager \l String[], List) : void \l }", ]; TooEager -> Object [arrowhead="onormal", style="solid"]; ILineParser [ shape = "record", label = "{ \<\<Interface\>\>\l ILineParser | | String) : String \l }", ]; ILineParser -> Object [arrowhead="onormal", style="solid"]; Object [ shape = "record", label = "{ Object | | - registerNatives() : void \l + getClass() : Class \l + hashCode() : int \l Object) : boolean \l - clone() : Object \l + toString() : String \l + notify() : void \l + notifyAll() : void \l + wait(long) : void \l + wait(long, int) : void \l + wait() : void \l - finalize() : void \l - \<clinit\>() : void \l }", ];  }